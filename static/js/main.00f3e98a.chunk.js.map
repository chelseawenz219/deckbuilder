{"version":3,"sources":["api/index.js","components/SearchBar.js","components/Card.js","components/SearchResults.js","components/DeckList.js","components/CardList.js","index.js"],"names":["fetchCards","a","name","text","types","URL","axios","get","data","console","log","cards","SearchBar","setResults","useState","setName","setText","setType","allTypes","setAllTypes","isDropdownLoading","setIsDropDownLoading","areCardsLoading","setAreCardsLoading","event","preventDefault","useEffect","fetchTypes","then","resp","id","src","onSubmit","className","type","placeholder","value","onChange","target","disabled","selected","hidden","map","index","key","to","Card","imageUrl","addCardToDeck","removeCardFromDeck","onClick","SearchResults","results","length","result","DeckList","deck","setDeck","cardCount","reduce","card","count","nextDeck","findIndex","splice","CardList","push","AppRouter","localStorageDeck","localStorage","getItem","JSON","parse","onDeckChange","setItem","stringify","path","exact","render","ReactDOM","href","document","getElementById"],"mappings":"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","file":"static/js/main.00f3e98a.chunk.js","sourcesContent":["\nimport axios from 'axios';\n\nexport async function fetchCards({ name, text, types }) {\n  try {\n    const URL = `https://api.magicthegathering.io/v1/cards?name=${ name }&text=${ text }&types=${types}`;\n    const { data } = await axios.get(URL);\n        console.log(\"URL\", URL);\n        console.log(\"data.cards\", data.cards);\n        \n    return data.cards || [];\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchTypes(){\n    try {\n        const { data } = await axios.get(\n            `https://api.magicthegathering.io/v1/types`\n        );\n            // console.log(data.types);\n        return data.types\n    }catch (error){\n        throw error;\n    }\n}\n\n","import React, { useState, useEffect } from 'react';\n\nimport { Link } from 'react-router-dom'\n\nimport {\n  fetchCards,\n  fetchTypes\n} from '../api';\n\nimport './SearchBar.css';\n\nconst SearchBar = ({ setResults }) => {\n\t//set name and text \"states\":\n\tconst [name, setName] = useState('');\n\tconst [text, setText] = useState('');\n\t//setting a state for category dropdown menu:\n\tconst [types, setType] = useState('');\n\tconst [allTypes, setAllTypes] = useState([]);\n\tconst [isDropdownLoading, setIsDropDownLoading] = useState(false);\n\tconst [areCardsLoading, setAreCardsLoading] = useState(false);\n\t// console.log(\"allTypes\", allTypes);\n\t//updating name state:\n\t//(event handler);\n\tconst handleNameChange = event => {\n\t\tsetName( event.target.value );\n\t}\n\t//updating text state:\n\t//(event handler);\n\tconst handleTextChange = event => {\n\t\tsetText( event.target.value );\n\t  }\n\t\n\tconst handleTypeChange = event => {\n\t\tsetType( event.target.value );\n\t\tconsole.log(\"etv\", event.target.value);\n\t}\n\n\tuseEffect(()=>{\n\t\tsetIsDropDownLoading(true);\n\t\t\n\t\tfetchTypes().then((resp) => {\n\t\t\tsetAllTypes(resp)\n\n\t\t\tsetIsDropDownLoading(false)\n\t\t})\n\t}, []);\n\n\tconsole.log(\"types\", allTypes);\n\t\n\t//attach update to submit(event);\n  async function handleSubmit(event) {\n\t //prevent default, as you would in any form submission.\n\tevent.preventDefault();\n\tsetAreCardsLoading(true)\n\t//fetch cards:\n\tconst cards = await fetchCards({\n\t\tname,\n\t\ttext,\n\t\ttypes,\n\t});\n\n\tconsole.log(\"cards\", cards);\n\n\t//update array(state) to contain cards(array);\n\tsetResults(cards);\n\tsetAreCardsLoading(false)\n  }\n\n  if (areCardsLoading) {\n\t  return <img id=\"loadingImg\" src=\"https://media.giphy.com/media/7NOZThmc5NOrKSwkxl/giphy.gif\" />\n  }\n\n  return (\n    <div id=\"search\">\n      <form onSubmit={ handleSubmit } >\n\t  <h3>Look up cards here...</h3>\n\t\t<input \n\t\t  className=\"searchBar\"\n          type=\"text\" \n          placeholder=\"card name\"\n          value={ name }\n          onChange={ handleNameChange } />\n        <input\n\t\t  className=\"searchBar\"\n          type=\"text\"\n          placeholder=\"card text\"\n          value={ text }\n          onChange={ handleTextChange } />\n\t\t  \t{\n\t\t  isDropdownLoading ? <select id=\"dropDown\">\n\t\t\t  <option value=\"\" disabled selected hidden>Select A Type...</option>\n\t\t\t\t\t  </select>\n\t\t\t\t\t\t   : <select id=\"dropDown\" onChange={ handleTypeChange }>\n\t\t  \t\t\t         <option value=\"\" disabled selected hidden>Select A Type...</option>\n\t\t\t\t\t{\n\t\t\t\t\t\t\tallTypes.map((type, index) => {\n\t\t\t\t\t\t\t\treturn <option key={index}value={type}>{type}</option>\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t\t\t </select>\n\t\t\t}\n        <button id=\"button\" type=\"submit\" >Search</button>\n      </form>\n\n\t  <Link id=\"deckbutton\" to=\"/deckbuilder/deck\">My Deck </Link>\n    </div>\n  );\n}\n\nexport default SearchBar;","//card component(template):\n\nimport React from 'react';\nimport './Card.css';\n\n\nconst Card = ({\n  id,\n  name,\n  // type,\n  // manaCost,\n  // text,\n  // flavor,\n  imageUrl,\n  addCardToDeck,\n  removeCardFromDeck\n}) => {\n  return (\n    <>\n      {\n        imageUrl ?\n        <div className=\"Card\">\n          <div>\n            <img className=\"preview\" src={imageUrl} />\n            <div className=\"actions\">\n              <button\n                onClick={() => {\n                  addCardToDeck({\n                    id,\n                    name,\n                    imageUrl\n                  })\n                }}>\n                (+)\n              </button>\n              <button\n                onClick={() => {\n                  removeCardFromDeck(\n                    id\n                  )\n                }}>\n                (-)\n              </button>\n            </div>\n\n          </div>\n          </div> : ''\n      }\n    </>\n  );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n\nconst SearchResults = ({ results, addCardToDeck, removeCardFromDeck }) => {\n\treturn (\n\t\t<>\n\t\t<h3>Here's what we found ({ results.length } results):</h3>\n\n\t  <div id=\"results\">\n\t\t{ \n\t\t  results.map(result => (\n\t\t\t<Card \n              key={ result.id } \n              addCardToDeck={ addCardToDeck }\n              removeCardFromDeck={ removeCardFromDeck }\n              {...result} />\n\t\t  ))\n\t\t}\n\t  </div>\n\t  </>\n\t);\n  }\n  \n  export default SearchResults;","import React from 'react';\n\nconst DeckList = ({ deck, setDeck }) => {\n\n\tlet cardCount = deck.reduce((cardCount, card) => {\n\t\t  return cardCount + card.count\n\t\t}, 0);\n\n\t\tconst removeCardFromDeck = ( id ) =>{\n\t\t\tconst nextDeck = [...deck];\n\t\t\t//copy.\n\t\t\tconst index = nextDeck.findIndex(card => card.id === id);\n\t\t\t//search.\n\t\n\t\t\t//if nothing nothing:\n\t\t\tif (index === -1) {\n\t\t\t\treturn;\n\t\t\t  }\n\t\t\t\n\t\t\t//destroy.\n\t\t\tif (nextDeck[index].count === 1) {\n\t\t\t\t// remove the card altogether\n\t\t\t\tnextDeck.splice(index, 1);\n\t\t\t  } else {\n\t\t\t\t// decrement the count\n\t\t\t\tnextDeck[index].count -= 1;\n\t\t\t  }\n\n\t\t\t  setDeck(nextDeck);\n\t\t}\n\n\t\tconsole.log(\"hello deck\", ...deck)\n\treturn (\n\t\t<>\n\t\t<h3>Your deck so far ({ cardCount } cards):</h3>\n\n\t\t<div id=\"deck\">\n\n\t\t<div className=\"DeckList\">\n\t\t{\n\t\tdeck.map(card => (\n\t\t\t\n\t\t\t<div className=\"Card\">\n\t\t\t  <div>\n\t\t\t\t<img className=\"preview\" src={card.imageUrl} />\n\t\t\t\t<div className=\"actions\">\n\t\t\t\t  <button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t  removeCardFromDeck(card.id)\n\t\t\t\t\t}}>\n\t\t\t\t\t(-)\n\t\t\t\t  </button>\n\t\t\t\t</div>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t))\t\t\n\t\t}\n\t\t</div>\n\t\t</div>\n\t\t</>\n)}\n\nexport default DeckList;","import React, {useState} from 'react';\n\nimport {\n    SearchBar,\n    SearchResults\n  } from './index';\n\nconst CardList = ({ deck, setDeck }) => {\n    const [results, setResults] = useState([]);\n\n\n    //add cards:\n    const addCardToDeck = ({ id, name, imageUrl}) =>{\n        const nextDeck = [...deck];\n        const index = nextDeck.findIndex(card => card.id === id);\n\n        if (index > -1) {\n            nextDeck[index].count += 1;\n          } else {\n            //if you find the spec card, push it in your copy.\n            nextDeck.push({\n              id,\n              name,\n              imageUrl,\n              count: 1\n            });\n          }\n\n          setDeck(nextDeck);\n    }\n    //remove cards:\n    const removeCardFromDeck = ( id ) =>{\n        const nextDeck = [...deck];\n        //copy.\n        const index = nextDeck.findIndex(card => card.id === id);\n        //search.\n\n        //if nothing nothing:\n        if (index === -1) {\n            return;\n          }\n        \n        //destroy.\n        if (nextDeck[index].count === 1) {\n            // remove the card altogether\n            nextDeck.splice(index, 1);\n          } else {\n            // decrement the count\n            nextDeck[index].count -= 1;\n          }\n          \n          //set state:\n          setDeck(nextDeck);\n    }\n\n    return (\n      <div id=\"app\">\n        <SearchBar setResults={ setResults } />\n        <SearchResults results={ results }\n                       addCardToDeck={ addCardToDeck }\n                       removeCardFromDeck={ removeCardFromDeck } />\n      </div>\n    );\n  }\n\n  export default CardList;","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport CardList from './components/CardList';\nimport DeckList from './components/DeckList';\n\nimport './index.css';\n\nfunction AppRouter () {\n  const [deck, setDeck] = useState([]);\n\n  useEffect(() => {\n    const localStorageDeck = localStorage.getItem('deck')\n    if (localStorageDeck) {\n      setDeck(JSON.parse(localStorageDeck))\n    }\n  }, [])\n\n  const onDeckChange = (deck) => {\n    localStorage.setItem('deck', JSON.stringify(deck))\n    setDeck(deck)\n  }\n\n  return (\n    <Router>\n      <Route path=\"/deckbuilder/\" exact render={() => <CardList deck={deck} setDeck={onDeckChange} />} />\n      <Route path=\"/deckbuilder/deck\" render={() => <DeckList deck={deck} setDeck={onDeckChange} />} />\n    </Router>\n  )\n}\n\n\nReactDOM.render(\n  <a href=\"/deckbuilder/\">\n      <img id=\"headerimg\" src=\"https://www.corbytechnicalschool.org/_files/images/B34A44C0A7347024A4D703C82A9B5BB9.gif\"></img>\n  </a>,\n  document.getElementById('Header')\n)\n\nReactDOM.render(\n  <AppRouter />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}